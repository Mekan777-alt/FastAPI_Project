"""rename appartament name

Revision ID: 0dbee82855ec
Revises: 
Create Date: 2024-02-22 01:52:01.544523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0dbee82855ec'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('performer_profiles',
    sa.Column('uuid', sa.VARCHAR(length=100), nullable=False),
    sa.Column('contact_name', sa.String(), nullable=False),
    sa.Column('specialization', sa.String(), nullable=False),
    sa.Column('bank_details', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('service_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('uk_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('uuid', sa.VARCHAR(length=100), nullable=False),
    sa.Column('uk_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['uk_id'], ['uk_profiles.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('object_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('uk_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['uk_id'], ['uk_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bank_name', sa.String(), nullable=True),
    sa.Column('account_number', sa.String(), nullable=True),
    sa.Column('uk_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['uk_id'], ['uk_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_descriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['service_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('apartment_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('apartment_name', sa.String(), nullable=False),
    sa.Column('area', sa.Float(), nullable=False),
    sa.Column('bathrooms', sa.Integer(), nullable=True),
    sa.Column('garden', sa.Boolean(), nullable=True),
    sa.Column('pool', sa.Boolean(), nullable=True),
    sa.Column('internet_operator', sa.String(), nullable=True),
    sa.Column('internet_speed', sa.Integer(), nullable=True),
    sa.Column('internet_fee', sa.Float(), nullable=True),
    sa.Column('key_holder', sa.String(), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['object_id'], ['object_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('notification_sent', sa.Boolean(), nullable=True),
    sa.Column('performer_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['object_id'], ['object_profiles.id'], ),
    sa.ForeignKeyConstraint(['performer_id'], ['performer_profiles.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant_profiles',
    sa.Column('uuid', sa.VARCHAR(length=100), nullable=False),
    sa.Column('apartment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment_profiles.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('performer_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('order_status', sa.Enum('a', 'b', 'c', 'd', 'e', name='orderstatus'), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.Column('execution_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['performer_id'], ['performer_profiles.uuid'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service_type.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant_profiles.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('tenant_profiles')
    op.drop_table('invoice_history')
    op.drop_table('apartment_profiles')
    op.drop_table('service_descriptions')
    op.drop_table('payment_details')
    op.drop_table('object_profiles')
    op.drop_table('employees')
    op.drop_table('uk_profiles')
    op.drop_table('service_type')
    op.drop_table('role')
    op.drop_table('performer_profiles')
    # ### end Alembic commands ###
